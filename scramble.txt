# https://docs.mongodb.com/manual/reference/bson-types/

function scramble(dbName, colName, num) {
	var database = db.getSiblingDB(dbName)
	var collection = database.getCollection(colName);
	var listOfDocuments = [];
	var data = collection.aggregate([{$sample: {size: num}}]);
	data.forEach( 
		function(document)
		{ 
			for(var indexField in document) {				
				document[indexField] = getFieldScrambled( document[indexField] );
			}
			listOfDocuments.push(document);				
		}
	)
	printjson(listOfDocuments);
}
function getFieldScrambled(field){
	// print( typeof field );
	switch( typeof field  ) 
	{
		case 'object': 
			// Date
			if ( field instanceof Date) {
				var day = 1000 * 60 * 60 * 24 * 365 * (2019-1970);
				field = new Date(Date.now() - (Math.floor(Math.random() * day)));
			}
			// ObjectID
			if ( field instanceof ObjectId ) {
				field = ObjectId();
			}
			// NumberDecimal
			if ( field instanceof NumberDecimal ) {
				field = NumberDecimal( Math.random() * 10000 );
			}
			// ARRAY
			if ( field instanceof Array ) {
				items = [];
				field.forEach(
					function(item){ 
						for(var itemField in item) {
							
							item[itemField]  = getFieldScrambled(item[itemField]);
						}						
						items.push( getFieldScrambled(item) );
					}
				)
				field = items;
			}
						
			break;
		case 'string':
			len = field.length;
			field = getMashedString(len);
    			break;
		case 'number':
			field = Math.floor( (Math.random() * 10000) );						
			break;
	}
	return field;	
}
function getMashedString(len){
	var retval = "";
	var alpha = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];

	for (i = 0; i < len; i++) {
		var RAND = Math.floor((Math.random() * 36) -1);
    		if ( RAND < 0 ) {
      			RAND = 0;
   		}
    		var someChars = alpha[RAND];
		retval += someChars;
	}
	return retval;
}